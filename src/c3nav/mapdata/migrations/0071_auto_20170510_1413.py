# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-05-10 14:13
from __future__ import unicode_literals

import c3nav.mapdata.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('mapdata', '0070_point'),
    ]

    operations = [
        migrations.CreateModel(
            name='LocationSlug',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(unique=True, verbose_name='name')),
            ],
            options={
                'verbose_name': 'Slug for Location',
                'verbose_name_plural': 'Slugs f√ºr Locations',
                'default_related_name': 'locationslugs',
            },
        ),
        migrations.AddField(
            model_name='area',
            name='can_describe',
            field=models.BooleanField(default=True, verbose_name='can be used to describe a position'),
        ),
        migrations.AddField(
            model_name='area',
            name='can_search',
            field=models.BooleanField(default=True, verbose_name='can be searched'),
        ),
        migrations.AddField(
            model_name='area',
            name='color',
            field=models.CharField(blank=True, help_text='if set, has to be a valid color for svg images', max_length=16, null=True, verbose_name='background color'),
        ),
        migrations.AddField(
            model_name='area',
            name='groups',
            field=models.ManyToManyField(blank=True, related_name='areas', to='mapdata.LocationGroup', verbose_name='Location Groups'),
        ),
        migrations.AddField(
            model_name='area',
            name='public',
            field=models.BooleanField(default=True, verbose_name='public'),
        ),
        migrations.AddField(
            model_name='area',
            name='titles',
            field=c3nav.mapdata.fields.JSONField(default={}),
        ),
        migrations.AddField(
            model_name='locationgroup',
            name='public',
            field=models.BooleanField(default=True, verbose_name='public'),
        ),
        migrations.AddField(
            model_name='point',
            name='can_describe',
            field=models.BooleanField(default=True, verbose_name='can be used to describe a position'),
        ),
        migrations.AddField(
            model_name='point',
            name='can_search',
            field=models.BooleanField(default=True, verbose_name='can be searched'),
        ),
        migrations.AddField(
            model_name='point',
            name='color',
            field=models.CharField(blank=True, help_text='if set, has to be a valid color for svg images', max_length=16, null=True, verbose_name='background color'),
        ),
        migrations.AddField(
            model_name='point',
            name='groups',
            field=models.ManyToManyField(blank=True, related_name='points', to='mapdata.LocationGroup', verbose_name='Location Groups'),
        ),
        migrations.AddField(
            model_name='point',
            name='public',
            field=models.BooleanField(default=True, verbose_name='public'),
        ),
        migrations.AddField(
            model_name='point',
            name='titles',
            field=c3nav.mapdata.fields.JSONField(default={}),
        ),
        migrations.AddField(
            model_name='section',
            name='can_describe',
            field=models.BooleanField(default=True, verbose_name='can be used to describe a position'),
        ),
        migrations.AddField(
            model_name='section',
            name='can_search',
            field=models.BooleanField(default=True, verbose_name='can be searched'),
        ),
        migrations.AddField(
            model_name='section',
            name='color',
            field=models.CharField(blank=True, help_text='if set, has to be a valid color for svg images', max_length=16, null=True, verbose_name='background color'),
        ),
        migrations.AddField(
            model_name='section',
            name='groups',
            field=models.ManyToManyField(blank=True, related_name='sections', to='mapdata.LocationGroup', verbose_name='Location Groups'),
        ),
        migrations.AddField(
            model_name='section',
            name='public',
            field=models.BooleanField(default=True, verbose_name='public'),
        ),
        migrations.AddField(
            model_name='section',
            name='titles',
            field=c3nav.mapdata.fields.JSONField(default={}),
        ),
        migrations.AddField(
            model_name='space',
            name='can_describe',
            field=models.BooleanField(default=True, verbose_name='can be used to describe a position'),
        ),
        migrations.AddField(
            model_name='space',
            name='can_search',
            field=models.BooleanField(default=True, verbose_name='can be searched'),
        ),
        migrations.AddField(
            model_name='space',
            name='color',
            field=models.CharField(blank=True, help_text='if set, has to be a valid color for svg images', max_length=16, null=True, verbose_name='background color'),
        ),
        migrations.AddField(
            model_name='space',
            name='groups',
            field=models.ManyToManyField(blank=True, related_name='spaces', to='mapdata.LocationGroup', verbose_name='Location Groups'),
        ),
        migrations.AddField(
            model_name='space',
            name='titles',
            field=c3nav.mapdata.fields.JSONField(default={}),
        ),
        migrations.AlterField(
            model_name='locationgroup',
            name='titles',
            field=c3nav.mapdata.fields.JSONField(default={}),
        ),
        migrations.AddField(
            model_name='area',
            name='slug_ptr',
            field=models.OneToOneField(db_column='slug_ptr', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='areas', to='mapdata.LocationSlug', verbose_name='location slug'),
        ),
        migrations.AddField(
            model_name='locationgroup',
            name='slug_ptr',
            field=models.OneToOneField(db_column='slug_ptr', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='locationgroups', to='mapdata.LocationSlug', verbose_name='location slug'),
        ),
        migrations.AddField(
            model_name='point',
            name='slug_ptr',
            field=models.OneToOneField(db_column='slug_ptr', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='points', to='mapdata.LocationSlug', verbose_name='location slug'),
        ),
        migrations.AddField(
            model_name='section',
            name='slug_ptr',
            field=models.OneToOneField(db_column='slug_ptr', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='mapdata.LocationSlug', verbose_name='location slug'),
        ),
        migrations.AddField(
            model_name='space',
            name='slug_ptr',
            field=models.OneToOneField(db_column='slug_ptr', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='spaces', to='mapdata.LocationSlug', verbose_name='location slug'),
        ),
    ]
